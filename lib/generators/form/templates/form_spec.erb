require "rails_helper"

RSpec.describe <%= class_name %>Form, type: :model do
  describe "validations" do
    it { is_expected.to validate_presence_of(:<%= model.downcase %>) }
  end

  describe "#valid?" do
    subject(:valid) { form.valid? }

    let(:<%= model.downcase %>) { build(:<%= model.downcase %>)}
    let(:form) { described_class.new(<%= model.downcase %>:, <%= attributes.map {|attribute| "#{attribute.name}:" }.join(', ') %>) }
    <% attributes.each do |attribute| %>let(:<%= attribute.name %>) { "true" }<% end %>

    it { is_expected.to be_truthy }
    <% attributes.each do |attribute| %>
    context "when <%= attribute.name %> is blank" do
      let(:<%= attribute.name %>) { "" }

      it { is_expected.to be_falsy }
    end
    <% end %>
  end

  describe "#save" do
    subject(:save) { form.save }

    let(:<%= model.downcase %>) { build(:<%= model.downcase %>) }
    let(:form) { described_class.new(<%= model.downcase %>:, <%= attributes.map {|attribute| "#{attribute.name}: true" }.join(', ') %>) }

    it "saves the <%= model %>" do
      save
      <% attributes.each do |attribute| %>expect(<%= model.downcase %>.<%= attribute.name %>).to be_truthy<% end %>
    end
  end
end

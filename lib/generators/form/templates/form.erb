class <%= class_name %>Form
  include ActiveModel::Model

  attr_accessor :<%= model.downcase %>
  <% if attributes.any? -%>
attr_reader <%= attributes.map { |attribute| ":#{attribute.name}" }.join(', ') %>
  <% end -%>

  validates :<%= model.downcase %>, presence: true
  <% attributes.map do |attribute| -%>
validates :<%= attribute.name %>, <%= attribute.type == :boolean ? "inclusion: { in: [true, false] }" : "presence: true" %>
  <% end -%>

  <% attributes.map do |attribute| -%>
def <%= attribute.name %>=(value)
    @<%= attribute.name %> = <%= attribute.type == :boolean ? "ActiveModel::Type::Boolean.new.cast(value)" : "value" %>
  end
  <% end -%>

  def save
    return false unless valid?

    <% attributes.map do |attribute| -%>
<%= model.downcase %>.<%= attribute.name %> = <%= attribute.name %>
    <% end -%>
<%= model.downcase %>.save
  end
end

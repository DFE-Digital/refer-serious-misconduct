name: Delete Review App

on:
  pull_request:
    types: [closed]
    branches: [main]
  workflow_dispatch:
    inputs:
      pr_number:
        description: PR number of review app to delete
        required: true
        type: string
jobs:
  delete-review-app-aks:
    name: Delete Review App AKS ${{ github.event.pull_request.number }}
    concurrency: deploy_review_${{ github.event.pull_request.number }}
    if: contains(github.event.pull_request.labels.*.name, 'deploy-aks') ||  ${{ github.event_name }} == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: aks-review
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: set PR_NUMBER
        id: config
        run: |
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            PR_NUMBER=${{ github.event.inputs.pr_number }}
          else
            PR_NUMBER=${{ github.event.pull_request.number }}
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.4
          terraform_wrapper: false

      - uses: DFE-Digital/github-actions/set-kubelogin-environment@master
        with:
          azure-credentials: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Destroy
        run: |
          make ci aks-review aks-terraform-destroy PR_NUMBER=${{ env.PR_NUMBER }}
        env:
          PR_NUMBER: ${{ env.PR_NUMBER }}

      - name: Post Pull Request Comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: aks
          message: |
            Review app refer serious misconduct deployed to <https://refer-serious-misconduct-${{ env.PR_NUMBER }}.test.teacherservices.cloud> was deleted

      - uses: Azure/login@v2
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: Install Storage Blob Extension
        run: az extension add --name storage-blob-preview

      - run: |
          STORAGE_ACCOUNT_NAME="s189t01rsmrvtfsa"
          echo "STORAGE_ACCOUNT_NAME=$STORAGE_ACCOUNT_NAME" >> $GITHUB_ENV
          TF_RESOURCE_GROUP_NAME="s189t01-rsm-rv-rg"
          echo "TF_RESOURCE_GROUP_NAME=$TF_RESOURCE_GROUP_NAME" >> $GITHUB_ENV
          CONTAINER_NAME="terraform-state"
          echo "CONTAINER_NAME=$CONTAINER_NAME" >> $GITHUB_ENV
          TFSTATE_CONTAINER_ACCESS_KEY="$(az storage account keys list -g $TF_RESOURCE_GROUP_NAME -n $STORAGE_ACCOUNT_NAME | jq -r '.[0].value')"
          echo "::add-mask::$TFSTATE_CONTAINER_ACCESS_KEY"
          echo "TFSTATE_CONTAINER_ACCESS_KEY=$TFSTATE_CONTAINER_ACCESS_KEY" >> $GITHUB_ENV
          TF_STATE_FILE=pr-${{ env.PR_NUMBER }}_kubernetes.tfstate
          echo "TF_STATE_FILE=$TF_STATE_FILE" >> $GITHUB_ENV
        shell: bash

      - name: Test for tf state file
        run: |
          pr_state_file=$(az storage blob list -c ${{ env.CONTAINER_NAME }} \
            --account-key ${{ env.TFSTATE_CONTAINER_ACCESS_KEY }} \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }} \
            --prefix $TF_STATE_FILE --query "[].name" -o tsv)
          if [ -n "$pr_state_file" ]; then
            echo "TF_STATE_EXISTS=true" >> $GITHUB_ENV
          fi

      - name: Delete tf state file
        if: env.TF_STATE_EXISTS == 'true'
        run: |
          versions="$(az storage blob list --account-name ${{ env.STORAGE_ACCOUNT_NAME }} -c ${{ env.CONTAINER_NAME }} --prefix ${{ env.TF_STATE_FILE }} --include v --query '[].versionId' -o tsv)"
          SAVEIFS=$IFS   # Save current IFS (Internal Field Separator)
          IFS=$'\n'      # Change IFS to newline char
          versions=($versions) # split the string into an array by the same name
          IFS=$SAVEIFS
          az storage blob delete -c ${{ env.CONTAINER_NAME }} --name ${{ env.TF_STATE_FILE }} \
            --account-key ${{ env.TFSTATE_CONTAINER_ACCESS_KEY }} \
            --account-name ${{ env.STORAGE_ACCOUNT_NAME }}
          for i in "${versions[@]}"
          do
            echo "Deleting Storage ${{ env.TF_STATE_FILE }} version $i"
            az storage blob delete -c ${{ env.CONTAINER_NAME }} --name ${{ env.TF_STATE_FILE }} --version-id $i \
              --account-key ${{ env.TFSTATE_CONTAINER_ACCESS_KEY }} \
              --account-name ${{ env.STORAGE_ACCOUNT_NAME }}
          done

name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - labeled
      - synchronize
      - reopened
      - opened
      - converted_to_draft

env:
  CONTAINER_REGISTRY: ghcr.io

jobs:
  docker:
    name: Docker build and push
    if: contains(github.event.pull_request.labels.*.name, 'deploy') || github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      docker_image: ${{ steps.dockerimage.outputs.docker_image_tag }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/actions/build-docker
        id: dockerimage
        with:
          github_username: ${{ github.actor }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy_nonprod:
    name: Deploy to ${{ matrix.environment }} environment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    concurrency: deploy_${{ matrix.environment }}
    needs: [docker]
    strategy:
      max-parallel: 1
      matrix:
        environment: [dev, test, preprod]
    environment:
      name: ${{ matrix.environment }}
      url: ${{ steps.deploy.outputs.environment_url }}
    outputs:
      environment_url: ${{ steps.deploy.outputs.environment_url }}

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/workflows/actions/deploy-environment
        id: deploy
        with:
          environment_name: ${{ matrix.environment }}
          image_tag: ${{ github.sha }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: ./.github/workflows/actions/smoke-test
        id: smoke-test
        with:
          environment: ${{ matrix.environment }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

  deploy_production:
    name: Deploy to production environment
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.environment_url }}
    concurrency: deploy_production
    needs: [deploy_nonprod]

    outputs:
      environment_url: ${{ steps.deploy.outputs.environment_url }}

    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/workflows/actions/deploy-environment
        id: deploy
        with:
          environment_name: production
          image_tag: ${{ github.sha }}
          azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

# frozen_string_literal: true

class FetchMalwareScanResult
  # Only later versions of the Azure Storage REST API support tags operations.
  Kernel.silence_warnings do
    Azure::Storage::Blob::Default::STG_VERSION = "2022-11-02"
  end

  SCAN_RESULT_TAG_KEY = /Malware Scanning scan result/
  SCAN_RESULT_TAG_VALUE_CLEAN = /No threats found/

  def initialize(blob:)
    @blob = blob
  end

  def call
    return unless blob.scan_result_enqueued?

    response = fetch_scan_result

    if response.success?
      if response.body =~ SCAN_RESULT_TAG_KEY
        blob.update!(
          malware_scan_result: malware_scan_result_from_response(response),
        )
        if blob.scan_result_suspect?
          RemoveMalwareBlobJob.perform_later(blob_id: blob.id)
        end
      end
    else
      blob.scan_result_error!
    end
  rescue Azure::Core::Http::HTTPError
    blob.scan_result_error!
  end

  private

  attr_reader :blob

  def blob_service
    @blob_service ||=
      Azure::Storage::Blob::BlobService.new(
        storage_account_name: ENV["AZURE_STORAGE_ACCOUNT_NAME"],
        storage_access_key: ENV["AZURE_STORAGE_ACCESS_KEY"],
      )
  end

  def fetch_scan_result
    blob_service.call(:get, get_tags_for_blob_url)
  end

  def get_tags_for_blob_url
    @get_tags_for_blob_url ||=
      blob_service.generate_uri(
        File.join("uploads", blob.key),
        { comp: "tags" },
      )
  end

  def malware_scan_result_from_response(response)
    response.body =~ SCAN_RESULT_TAG_VALUE_CLEAN ? "clean" : "suspect"
  end
end

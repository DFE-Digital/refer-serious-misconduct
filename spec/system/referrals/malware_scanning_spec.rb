require "rails_helper"

RSpec.describe "Malware scanning", type: :system do
  include CommonSteps
  include MalwareScanHelpers
  include SummaryListHelpers

  scenario "An employer adds evidence to a referral" do
    given_the_service_is_open
    given_malware_scanning_is_enabled(scan_result: "Malicious")
    and_i_am_signed_in
    and_the_referral_form_feature_is_active
    and_i_have_an_existing_referral
    and_i_visit_the_referral
    then_i_see_the_referral_summary

    when_i_upload_the_evidence_files
    and_i_click_save_and_continue

    then_i_see_a_list_of_the_uploaded_files

    when_i_click_on_an_uploaded_file
    then_i_see_a_pending_scan_result_page

    when_the_pending_scan_result_is_fetched_after_a_delay
    and_i_click_back
    when_i_click_on_an_uploaded_file
    then_i_see_a_malicious_scan_result_page
  end

  private

  def when_i_upload_the_evidence_files
    visit edit_referral_allegation_evidence_upload_path(@referral)

    attach_file(
      "Upload files",
      [
        Rails.root.join("spec/fixtures/files/upload1.pdf"),
        Rails.root.join("spec/fixtures/files/upload2.pdf")
      ]
    )
  end

  def then_i_see_a_list_of_the_uploaded_files
    expect(page).to have_content("Uploaded evidence")
    within(".govuk-summary-list") do
      expect(page).to have_link("upload1.pdf")
      expect(page).to have_link("upload2.pdf")
    end
  end

  def when_i_click_on_an_uploaded_file
    click_on "upload1.pdf"
  end

  def then_i_see_a_pending_scan_result_page
    expect(page).to have_content("upload1.pdf")
    expect(page).to have_content("File being checked for viruses")
  end

  def when_the_pending_scan_result_is_fetched_after_a_delay
    time = Time.zone.now + 1.minute
    travel_to(time) { perform_enqueued_jobs(only: FetchMalwareScanResultJob) }
  end

  def then_i_see_a_malicious_scan_result_page
    expect(page).to have_content("upload1.pdf")
    expect(page).to have_content("File removed due to suspected virus")
  end
end
